/********************************************************** {{{1 ***********
 *  Copyright © 2015 "Martin Krischik" «krischik@users.sourceforge.net»
 ***************************************************************************
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see http://www.gnu.org/licenses/
 **********************************************************}}}1 **********/

group = "com.krischik"
version = "1.0.0"
description = "Import KetFit and Withings exports into Google Fit — Android App"

buildscript {
   repositories {
      google ()
      mavenCentral ()
      mavenLocal ()
   }
   dependencies {
      classpath (
         [group: 'com.android.tools.build', name: 'gradle', version: Gradle_Tools_Version],
//       [group: 'com.google.gms', name: 'google-services', version: '1.5.0'],
         [group: 'com.jakewharton.hugo', name: 'hugo-plugin', version: '1.2.1'],
//         [group: 'com.neenbedankt.gradle.plugins', name: 'android-apt', version: '1.8'],
//         [group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: Kotlin_Version],
      ) // classpath
   } // dependencies
} // buildscript

apply plugin: 'com.android.application'
// apply plugin: 'android-apt'
// apply plugin: 'kotlin-android'
apply plugin: 'com.jakewharton.hugo'
//apply plugin: 'com.google.gms.google-services'

android {
   compileSdkVersion Compile_Sdk_Version
   buildToolsVersion Built_Tools_Version

   packagingOptions {
      exclude 'LICENSE.txt'
   } // packagingOptions

   signingConfigs {
      debug {
         storeFile file (System.getenv ("KEY_STORE"))
         storePassword System.getenv ("KEY_STOREPASS")
         keyAlias System.getenv ("KEY_ALIAS")
         keyPassword System.getenv ("KEY_KEYPASS")
      } // debug
      release {
         storeFile file (System.getenv ("KEY_STORE"))
         storePassword System.getenv ("KEY_STOREPASS")
         keyAlias System.getenv ("KEY_ALIAS")
         keyPassword System.getenv ("KEY_KEYPASS")
      } // release
   } // signingConfigs

   defaultConfig {
      applicationId "com.krischik.fit_import"
      minSdkVersion Min_Sdk_Version
      targetSdkVersion Target_Sdk_Version
      testApplicationId 'com.krischik.fit_import.test'
      testInstrumentationRunner "android.test.InstrumentationTestRunner"
      versionCode 10000
      versionName "1.0.0"
   }
   buildTypes {
      release {
         signingConfig signingConfigs.release
         minifyEnabled true
         proguardFiles 'src/main/config/proguard-release.pro'
      }
      debug {
         signingConfig signingConfigs.debug
         minifyEnabled true
         proguardFiles 'src/main/config/proguard-debug.pro'
      }
   }
   sourceSets {
      main {
         java.srcDirs += 'src/main/kotlin'
      } // main
      androidTest {
         java.srcDirs += 'src/androidTest/kotlin'
      } // androidTest
   } // sourceSets
   compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_8
      targetCompatibility JavaVersion.VERSION_1_8
   } // compileOptions
   productFlavors {
   }
   lintOptions {
      abortOnError false
   }
} // android

dependencies {
   annotationProcessor (
      [group: 'org.androidannotations', name: 'androidannotations', version: Androidannotations_Version]
   )
   implementation (
      [group: 'org.androidannotations', name: 'androidannotations-api', version: Androidannotations_Version]
   )
   implementation project (':AndroidLib')
   implementation project (':Fit-Import-Lib')
   implementation group: 'com.android.support',
		  name: 'appcompat-v7',
		  version: Androidsupport_Version
   implementation group: 'com.android.support', name: 'support-v4', version: Androidsupport_Version
   implementation group: 'com.google.android.gms', name: 'play-services', version: '12.0.1'
   implementation group: 'org.androidannotations',
		  name: 'androidannotations-api',
		  version: Androidannotations_Version
//   implementation group: 'org.jetbrains.kotlin', name: 'kotlin-runtime', version: Kotlin_Version
   // apt
//   implementation (
//      [group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: Kotlin_Version]
//   )
   androidTestImplementation project (':AndroidTestLib')
   androidTestImplementation group: 'com.github.rtyley',
			     name: 'android-screenshot-celebrity',
			     version: '1.9'
   // compile
   androidTestImplementation (
      [group: 'com.jayway.android.robotium', name: 'robotium-solo', version: '5.6.3']
      ,
      )
   androidTestImplementation ('com.android.support:multidex-instrumentation:1.0.3') {
      exclude group: 'com.android.support', module: 'multidex'
   }
} // dependencies

// apt {
//    arguments {
//       androidManifestFile variant.outputs [0].processResources.manifestFile
//       // if you have multiple outputs (when using splits), you may want to have other index than 0
//
//       resourcePackageName 'com.krischik.fit_import'
//
//       // If you're using Android NBS flavors you should use the following line instead of hard-coded packageName
//       // resourcePackageName android.defaultConfig.packageName
//
//       // You can set optional annotation processing options here, like these commented options:
//       // logLevel 'INFO'
//       // logFile '/var/log/aa.log'
//    } // arguments
// } // apt

// vim: set nowrap tabstop=8 shiftwidth=3 softtabstop=3 expandtab :
// vim: set textwidth=0 filetype=groovy foldmethod=marker nospell :
